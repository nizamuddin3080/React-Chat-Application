{"version":3,"sources":["components/MyMessage.jsx","components/MessageForm.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","bind","SendOutlined","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","console","log","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","chatAppProps","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8418f5e.chunk.js","sourcesContent":["const MyMessage = ({ message }) => {\r\n\r\n    if (message?.attachments?.length > 0) {\r\n        return (\r\n            <img\r\n                src={message.attachments[0].file}\r\n                alt='message-attachments'\r\n                className='message-image'\r\n                style={{ float: 'right' }}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='message' style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMessage;","import { useState } from 'react';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('');\r\n    const { chatId, creds } = props;\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n\r\n        isTyping(props, chatId);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if (text.length > 0) {\r\n            sendMessage(creds, chatId, { text });\r\n        }\r\n\r\n        setValue('');\r\n    };\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text: '' });\r\n    };\r\n\r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input\r\n                className=\"message-input\"\r\n                placeholder=\"Send a message...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleUpload.bind(this)}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default MessageForm;","const TheirMessage = ({ message, lastMessage }) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username\r\n\r\n    return (\r\n        <div className='message-row'>\r\n            {isFirstMessageByUser && (\r\n                <div\r\n                    className='message-avatar'\r\n                    style={{ backgroundImage: message.sender && `url(${message?.sender?.avatar})` }}\r\n                />\r\n            )}\r\n\r\n            {message?.attachments?.length > 0\r\n                ? (\r\n                    <img\r\n                        src={message.attachments[0].file}\r\n                        alt='message-attachments'\r\n                        className='message-image'\r\n                        style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n                    />\r\n                ) : (\r\n                    <div className='message' style={{ float: 'left', marginLeft: isFirstMessageByUser ? '4px' : '48px', backgroundColor: '#CABCDC' }}>\r\n                        {message.text}\r\n                    </div>\r\n                )\r\n\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TheirMessage;","import MyMessage from './MyMessage';\r\nimport MessageForm from './MessageForm';\r\nimport TheirMessage from './TheirMessage'\r\n\r\nconst ChatFeed = (props) => {\r\n\r\n    const { chats, activeChat, userName, messages } = props;\r\n\r\n    const chat = chats && chats[activeChat]\r\n\r\n    console.log(\"chats==>\", chat)\r\n    console.log(\"userName==>\", userName)\r\n    console.log(\"messages==>\", messages)\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div\r\n                key={`read_${index}`}\r\n                className='read-receipt'\r\n                style={{\r\n                    float: isMyMessage ? 'right' : 'left',\r\n                    backgroundImage: `url(${person?.person?.avatar})`\r\n\r\n                }}\r\n            />\r\n        ))\r\n\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages)\r\n\r\n        console.log(keys)\r\n        return keys.map((key, index) => {\r\n\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return (\r\n                <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n                    <div className='message-block'>\r\n                        {\r\n                            isMyMessage\r\n                                ? <MyMessage message={message} />\r\n                                : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\r\n\r\n                        }\r\n                    </div>\r\n                    <div className='read-receipts' style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    // renderMessages()\r\n    if (!chat) return <div />\r\n\r\n    return (\r\n        <div className='chat-feed'>\r\n            <div className='chat-title-container'>\r\n                <div className='chat-title'>{chat?.title}</div>\r\n                <div className='chat-subtitle'>\r\n                    {chat.people.map((person) => `${person.person.username}`)}\r\n                </div>\r\n\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{ height: '100px' }} />\r\n            <div className='message-form-container'>\r\n                <MessageForm {...props} chatId={activeChat} />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed;","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const authObject = { 'Project-Id': \"2fe36ca1-dd1d-4c36-8874-c7f658e22b12\", 'User-Name': username, 'User-Secret': password }\r\n        try {\r\n            //this the request from chat engine to get username & password\r\n            await axios.get('https://api.chatengine.io/chats', { headers: authObject })\r\n            //if the request successfull we are going to store user credentials into\r\n            //local storage once you looged in when you come to the page you are already\r\n            //to be logged in, not in this case to logged in again.\r\n            localStorage.setItem('username', username)\r\n            localStorage.setItem('password', password)\r\n\r\n            window.location.reload();\r\n\r\n\r\n\r\n        } catch (error) {\r\n            setError('Wrong credentials found...')\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n            <div className='form'>\r\n                <h1 className='title'>Chat Application</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        type='text'\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        className='input'\r\n                        placeholder='Username'\r\n                        required\r\n                    />\r\n\r\n                    <input\r\n                        type='password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        className='input'\r\n                        placeholder='Password'\r\n                        required\r\n                    />\r\n                    <div align='center'>\r\n                        <button className='button' type='submit'>\r\n                            <span>Start Chatting</span>\r\n\r\n                        </button>\r\n                        <h2 className=\"error\">{error}</h2>\r\n\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport { ChatEngine } from 'react-chat-engine';\r\nimport ChatFeed from './components/ChatFeed';\r\nimport LoginForm from './components/LoginForm';\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n    if (!localStorage.getItem('username')) return <LoginForm />\r\n\treturn (\r\n\t\t<ChatEngine\r\n            height='100vh'\r\n\t\t\tprojectID='2fe36ca1-dd1d-4c36-8874-c7f658e22b12'\r\n\t\t\tuserName='demo'\r\n\t\t\tuserSecret='123456'\r\n\t\t\tuserName={localStorage.getItem('username')}\r\n            userSecret={localStorage.getItem('password')}\r\n\t\t\trenderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}